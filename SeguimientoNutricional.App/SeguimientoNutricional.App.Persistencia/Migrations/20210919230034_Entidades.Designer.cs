// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeguimientoNutricional.App.Persistencia;

namespace SeguimientoNutricional.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210919230034_Entidades")]
    partial class Entidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SeguimientoNutricional.App.Dominio.HistorialRecomendacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("RegistroRecomendacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistroRecomendacionId");

                    b.ToTable("HistorialRecomendacion");
                });

            modelBuilder.Entity("SeguimientoNutricional.App.Dominio.HistorialValoracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("RegistroValoracionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistroValoracionId");

                    b.ToTable("HistorialValoracion");
                });

            modelBuilder.Entity("SeguimientoNutricional.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentoIdentidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persona");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("SeguimientoNutricional.App.Dominio.Recomendacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Recomendacion");
                });

            modelBuilder.Entity("SeguimientoNutricional.App.Dominio.Valoracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CaloriasConsumidas")
                        .HasColumnType("int");

                    b.Property<int>("Estatura")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("Imc")
                        .HasColumnType("int");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Valoracion");
                });

            modelBuilder.Entity("SeguimientoNutricional.App.Dominio.Coach", b =>
                {
                    b.HasBaseType("SeguimientoNutricional.App.Dominio.Persona");

                    b.Property<string>("Especialidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TarjetaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Coach");
                });

            modelBuilder.Entity("SeguimientoNutricional.App.Dominio.Nutricionista", b =>
                {
                    b.HasBaseType("SeguimientoNutricional.App.Dominio.Persona");

                    b.Property<int?>("HistorialRecomendacionId")
                        .HasColumnType("int")
                        .HasColumnName("Nutricionista_HistorialRecomendacionId");

                    b.Property<int?>("HistorialValoracionId")
                        .HasColumnType("int")
                        .HasColumnName("Nutricionista_HistorialValoracionId");

                    b.Property<int?>("RecomendacionId")
                        .HasColumnType("int");

                    b.Property<string>("TajertaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("HistorialRecomendacionId");

                    b.HasIndex("HistorialValoracionId");

                    b.HasIndex("RecomendacionId");

                    b.HasDiscriminator().HasValue("Nutricionista");
                });

            modelBuilder.Entity("SeguimientoNutricional.App.Dominio.Paciente", b =>
                {
                    b.HasBaseType("SeguimientoNutricional.App.Dominio.Persona");

                    b.Property<int?>("CoachId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HistorialRecomendacionId")
                        .HasColumnType("int");

                    b.Property<int?>("HistorialValoracionId")
                        .HasColumnType("int");

                    b.Property<int>("Latitud")
                        .HasColumnType("int");

                    b.Property<int>("Longitud")
                        .HasColumnType("int");

                    b.Property<int?>("NutricionistaId")
                        .HasColumnType("int");

                    b.Property<int?>("ValoracionId")
                        .HasColumnType("int");

                    b.HasIndex("CoachId");

                    b.HasIndex("HistorialRecomendacionId");

                    b.HasIndex("HistorialValoracionId");

                    b.HasIndex("NutricionistaId");

                    b.HasIndex("ValoracionId");

                    b.HasDiscriminator().HasValue("Paciente");
                });

            modelBuilder.Entity("SeguimientoNutricional.App.Dominio.HistorialRecomendacion", b =>
                {
                    b.HasOne("SeguimientoNutricional.App.Dominio.Recomendacion", "RegistroRecomendacion")
                        .WithMany()
                        .HasForeignKey("RegistroRecomendacionId");

                    b.Navigation("RegistroRecomendacion");
                });

            modelBuilder.Entity("SeguimientoNutricional.App.Dominio.HistorialValoracion", b =>
                {
                    b.HasOne("SeguimientoNutricional.App.Dominio.Valoracion", "RegistroValoracion")
                        .WithMany()
                        .HasForeignKey("RegistroValoracionId");

                    b.Navigation("RegistroValoracion");
                });

            modelBuilder.Entity("SeguimientoNutricional.App.Dominio.Nutricionista", b =>
                {
                    b.HasOne("SeguimientoNutricional.App.Dominio.HistorialRecomendacion", "HistorialRecomendacion")
                        .WithMany()
                        .HasForeignKey("HistorialRecomendacionId");

                    b.HasOne("SeguimientoNutricional.App.Dominio.HistorialValoracion", "HistorialValoracion")
                        .WithMany()
                        .HasForeignKey("HistorialValoracionId");

                    b.HasOne("SeguimientoNutricional.App.Dominio.Recomendacion", "Recomendacion")
                        .WithMany()
                        .HasForeignKey("RecomendacionId");

                    b.Navigation("HistorialRecomendacion");

                    b.Navigation("HistorialValoracion");

                    b.Navigation("Recomendacion");
                });

            modelBuilder.Entity("SeguimientoNutricional.App.Dominio.Paciente", b =>
                {
                    b.HasOne("SeguimientoNutricional.App.Dominio.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId");

                    b.HasOne("SeguimientoNutricional.App.Dominio.HistorialRecomendacion", "HistorialRecomendacion")
                        .WithMany()
                        .HasForeignKey("HistorialRecomendacionId");

                    b.HasOne("SeguimientoNutricional.App.Dominio.HistorialValoracion", "HistorialValoracion")
                        .WithMany()
                        .HasForeignKey("HistorialValoracionId");

                    b.HasOne("SeguimientoNutricional.App.Dominio.Nutricionista", "Nutricionista")
                        .WithMany()
                        .HasForeignKey("NutricionistaId");

                    b.HasOne("SeguimientoNutricional.App.Dominio.Valoracion", "Valoracion")
                        .WithMany()
                        .HasForeignKey("ValoracionId");

                    b.Navigation("Coach");

                    b.Navigation("HistorialRecomendacion");

                    b.Navigation("HistorialValoracion");

                    b.Navigation("Nutricionista");

                    b.Navigation("Valoracion");
                });
#pragma warning restore 612, 618
        }
    }
}
